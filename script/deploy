#!/usr/bin/env bash
set -e # halt script on error
echo "START DEPLOY"
echo "============"

# Get the deploy key by using Travis's stored variables to decrypt deploy_key.enc
ENCRYPTED_KEY_VAR="encrypted_${ENCRYPTION_LABEL}_key"
ENCRYPTED_IV_VAR="encrypted_${ENCRYPTION_LABEL}_iv"
ENCRYPTED_KEY=${!ENCRYPTED_KEY_VAR}
ENCRYPTED_IV=${!ENCRYPTED_IV_VAR}
openssl aes-256-cbc -K $ENCRYPTED_KEY -iv $ENCRYPTED_IV -in CornwallCollegeTravisBot.enc -out CornwallCollegeTravisBot -d
chmod 600 CornwallCollegeTravisBot
eval `ssh-agent -s`
ssh-add CornwallCollegeTravisBot

REPO=`git config remote.origin.url`
SSH_REPO=${REPO/https:\/\/github.com\//git@github.com:}
SHA=`git rev-parse --verify HEAD`
COMMITTER_EMAIL=`git log HEAD^..HEAD --pretty='%aE'`


# Pull requests and commits to other branches shouldn't try to deploy, just build to verify
if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "master" ]; then
    echo "====================="
    echo "Deploying to develop"
    echo "====================="

#///////////////
	# git@github.com:CornwallCollege/www_static.git
    git clone --depth 1 git@github.com:CornwallCollege/www_static ../out
    echo "Switched to develop branch"
    git pull origin develop
    echo "did pull"
    git checkout develop
    # Clean out existing contents
    rm -rf ../out/*
ls -l ../out/
    echo "====================="
    echo "File Copy Start."
    echo "====================="
    rsync -av ./_site/ ../out
    echo "====================="
    echo "File Copy Finish."
    echo "====================="

echo "====================="
echo "Starting index.html check"
echo "====================="
if [ "$(ls -lR ../out | grep index.html | wc -l)" -ge "10" ];
then
  echo "==================================================================="
  echo "More than 10 index files exist so probably ok to push to www_static";
  echo "==================================================================="

    pwd
    cd ../out
    pwd
    
    echo "====================="
    echo "Starting GIT publish."
    echo "====================="
    git config user.name "Travis CI"
    git config user.email "${COMMITTER_EMAIL}"
    git add -A .
    git commit -m "Deploy to GijtHub: ${SHA}"
    # Now that we're all set up, we can push to the develop branch.
    git push
    echo "Pushed to develop"
else
  echo "=========================================================="
  #echo "Didn't find index.html anywhere so not committing to www_static";
  echo "Didn't find any sauce.html so not committing to www_static";
  echo "=========================================================="
  exit 1
fi;
#///////////////
    
else
    echo "======================="
    echo "Deploying to Production"
    echo "======================="
    git clone --depth 1 git@github.com:CornwallCollege/www_static ../out
sleep 5
    # Clean out existing contents
    rm -rf ../out/*
ls -l ../out/
    echo "====================="
    echo "File Copy Start."
    echo "====================="
    rsync -av ./_site/ ../out
    echo "====================="
    echo "File Copy Finish."
    echo "====================="

echo "====================="
echo "Starting index.html check"
echo "====================="
if [ "$(ls -lR ../out | grep index.html | wc -l)" -ge "10" ];
then
  echo "==================================================================="
  echo "More than 10 index files exist so probably ok to push to www_static";
  echo "==================================================================="

    pwd
    cd ../out
    pwd
    
    echo "====================="
    echo "Starting GIT publish."
    echo "====================="
    git config user.name "Travis CI"
    git config user.email "${COMMITTER_EMAIL}"
    git add -A .
    git commit -m "Deploy to GitHub: ${SHA}"
    # Now that we're all set up, we can push.
    git push origin master

else
  echo "=========================================================="
  #echo "Didn't find index.html anywhere so not committing to www_static";
  echo "Didn't find any sauce.html so not committing to www_static";
  echo "=========================================================="
  exit 1
fi;


fi
